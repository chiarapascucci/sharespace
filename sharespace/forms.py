"""
    an empty version of this file is generated by Django when initialising a Django project

    the classes in this file represent HTML form that can be instantiated and rendered in the user's browser
    they rely on Django's own ModelForm

"""

__author__ = "Chiara Pascucci"

from django import forms
from django.contrib.auth.forms import UserCreationForm
from phonenumber_field.formfields import PhoneNumberField
from sharespace.models import Image, Item, CustomUser, UserProfile, SubCategory, \
    ReportToAdmin, PurchaseProposal


class UserForm(UserCreationForm):
    email = forms.EmailField(widget=forms.EmailInput())
    username = forms.CharField(max_length=55)

    def clean_email(self):
        data = self.cleaned_data['email']
        return data.lower()

    class Meta:
        fields = ('email', 'username',)
        model = CustomUser


class UserProfileForm(forms.ModelForm):
    class Meta:
        fields = ('bio', 'picture', 'user_post_code')
        model = UserProfile


class EditUserProfileBasicForm(forms.ModelForm):
    picture = forms.ImageField(required=False)
    bio = forms.CharField(required=False)

    class Meta:
        model = UserProfile
        fields = ('bio', 'picture',)


class ImageForm(forms.ModelForm):
    class Meta:
        model = Image
        fields = ('image',)


class EditItemForm(forms.ModelForm):
    class Meta:
        fields = ('name', 'description', 'main_category', 'sec_category', 'max_loan_len')
        model = Item


class AddItemForm(forms.ModelForm):
    class Meta:
        fields = ('name', 'description', 'main_category', 'sec_category', 'max_loan_len')
        model = Item

    def __init__(self, *args, **kwargs):
        super().__init__(*args, *kwargs)
        self.fields['sec_category'].queryset = SubCategory.objects.none()

        if 'main_category' in self.data:
            try:
                main_cat_id = int(self.data.get('main_category'))
                self.fields['sec_category'].queryset = SubCategory.objects.filter(parent_id=main_cat_id)
            except (ValueError, TypeError):
                pass
        elif self.instance.pk:
            self.fields['sec_category'].queryset = SubCategory.objects.all()


class SubmitReportForm(forms.ModelForm):
    class Meta:
        model = ReportToAdmin
        fields = ('report_title', 'report_body', 'report_sender', 'report_date_out')
        widgets = {'report_sender': forms.HiddenInput(),
                   'report_receiver': forms.HiddenInput(),
                   'report_date_out': forms.HiddenInput(),
                   }


class SubmitPurchaseProposalForm(forms.ModelForm):
    proposal_contact = PhoneNumberField()
    proposal_price = forms.DecimalField(required=True, max_digits=10, min_value=0.01)

    class Meta:
        model = PurchaseProposal
        fields = ('proposal_item_name', 'proposal_cat', 'proposal_sub_cat',
                  'proposal_item_description', 'proposal_price', 'proposal_contact',)
